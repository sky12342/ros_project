// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file destination.hpp
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef FAST_DDS_GENERATED__DESTINATION_DESTINATION_HPP
#define FAST_DDS_GENERATED__DESTINATION_DESTINATION_HPP

#include <cstdint>
#include <utility>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(DESTINATION_SOURCE)
#define DESTINATION_DllAPI __declspec( dllexport )
#else
#define DESTINATION_DllAPI __declspec( dllimport )
#endif // DESTINATION_SOURCE
#else
#define DESTINATION_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define DESTINATION_DllAPI
#endif // _WIN32

namespace Destination {

/*!
 * @brief This class represents the structure Destination_site defined by the user in the IDL file.
 * @ingroup destination
 */
class Destination_site
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport Destination_site()
    {
    }

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~Destination_site()
    {
    }

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object Destination_site that will be copied.
     */
    eProsima_user_DllExport Destination_site(
            const Destination_site& x)
    {
                    m_x = x.m_x;

                    m_y = x.m_y;

    }

    /*!
     * @brief Move constructor.
     * @param x Reference to the object Destination_site that will be copied.
     */
    eProsima_user_DllExport Destination_site(
            Destination_site&& x) noexcept
    {
        m_x = x.m_x;
        m_y = x.m_y;
    }

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object Destination_site that will be copied.
     */
    eProsima_user_DllExport Destination_site& operator =(
            const Destination_site& x)
    {

                    m_x = x.m_x;

                    m_y = x.m_y;

        return *this;
    }

    /*!
     * @brief Move assignment.
     * @param x Reference to the object Destination_site that will be copied.
     */
    eProsima_user_DllExport Destination_site& operator =(
            Destination_site&& x) noexcept
    {

        m_x = x.m_x;
        m_y = x.m_y;
        return *this;
    }

    /*!
     * @brief Comparison operator.
     * @param x Destination_site object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const Destination_site& x) const
    {
        return (m_x == x.m_x &&
           m_y == x.m_y);
    }

    /*!
     * @brief Comparison operator.
     * @param x Destination_site object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const Destination_site& x) const
    {
        return !(*this == x);
    }

    /*!
     * @brief This function sets a value in member x
     * @param _x New value for member x
     */
    eProsima_user_DllExport void x(
            int32_t _x)
    {
        m_x = _x;
    }

    /*!
     * @brief This function returns the value of member x
     * @return Value of member x
     */
    eProsima_user_DllExport int32_t x() const
    {
        return m_x;
    }

    /*!
     * @brief This function returns a reference to member x
     * @return Reference to member x
     */
    eProsima_user_DllExport int32_t& x()
    {
        return m_x;
    }


    /*!
     * @brief This function sets a value in member y
     * @param _y New value for member y
     */
    eProsima_user_DllExport void y(
            int32_t _y)
    {
        m_y = _y;
    }

    /*!
     * @brief This function returns the value of member y
     * @return Value of member y
     */
    eProsima_user_DllExport int32_t y() const
    {
        return m_y;
    }

    /*!
     * @brief This function returns a reference to member y
     * @return Reference to member y
     */
    eProsima_user_DllExport int32_t& y()
    {
        return m_y;
    }



private:

    int32_t m_x{0};
    int32_t m_y{0};

};

} // namespace Destination

#endif // _FAST_DDS_GENERATED_DESTINATION_DESTINATION_HPP_


